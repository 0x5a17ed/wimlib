.TH WIMLIB-IMAGEX "1" "October 2013" "@IMAGEX_PROGNAME@ @VERSION@" "User Commands"
.SH NAME
@IMAGEX_PROGNAME@-optimize \- Optimize a WIM archive
.SH SYNOPSIS
\fB@IMAGEX_PROGNAME@ optimize\fR \fIWIMFILE\fR [\fIOPTION\fR...]
.SH DESCRIPTION
\fB@IMAGEX_PROGNAME@ optimize\fR will rebuild the stand-alone WIM \fIWIMFILE\fR.  The new
WIM is written to a temporary file, and it is renamed to the original file when
it's ready.  This action will remove any holes that have been left as a result
of appending images, so the new WIM may be slightly smaller than the old WIM.
In addition, some errors in the original WIM may be fixed by re-writing it
(although most cannot).
This command is also available as simply \fBwimoptimize\fR if the appropriate
hard link or batch file has been installed.
.SH OPTIONS
.TP 6
\fB--check\fR
When reading \fIWIMFILE\fR, verify its integrity if an integrity table is
present.  In addition, include an integrity table in the optimized WIM.  If this
option is not specified, by default the integrity table (if present) is not
checked, and an integrity table is included in the rebuilt WIM if and only if
one was present in the original WIM.
.TP
\fB--nocheck\fR
Neither verify the integrity of \fIWIMFILE\fR using the integrity table, nor
include an integrity table in the rebuilt WIM file.
.TP
\fB--recompress\fR
Recompress all compressed streams in \fIWIMFILE\fR when rebuilding it.  This
will increase the time needed to rebuild the WIM, unless the WIM is
uncompressed, but it may result in a better compression ratio if wimlib can do a
better job than the program that wrote the original file.  A side effect of this
is that every stream in the original WIM will be checksummed, so this can help
verify that the WIM is intact (equivalent to applying all the images from it).
.IP ""
Note: as mentioned in the README, wimlib generally provides a slightly better
XPRESS compression ratio than Microsoft's software, while it generally provides
a slightly worse LZX compression ratio than Microsoft's software.  So, you may
not want to specify \fB--recompress\fR when optimizing a LZX-compressed WIM
created on Windows with Microsoft's ImageX.
.TP
\fB--compress-slow\fR
With \fB--recompress\fR: Spend even more time compressing the data in order to
achieve a higher compression ratio.  Currently, this only has an effect with LZX
("maximum") compression.  Depending on the data, compressing with this option
will take around 10 to 15 times longer and produce a LZX-compressed WIM about 1%
to 5% smaller than one produced with the default LZX compressor.  Depending on
the data, the resulting WIM may be approximately the same size (typically no
more than 0.4% different) as a LZX-compressed WIM produced by WIMGAPI.
.TP
\fB--threads\fR=\fINUM_THREADS\fR
Number of threads to use for compressing data.  Default: autodetect (number of
processors).  This parameter is only meaningful when \fB--recompress\fR is also
specified.
.TP
\fB--pipable\fR
Rebuild the WIM so that it can be applied fully sequentially, including from a
pipe.  See \fB@IMAGEX_PROGNAME@ capture\fR(1) for more details about creating
pipable WIMs.  By default, when neither \fB--pipable\fR or \fB--not-pipable\fR
is specified, the rebuilt WIM will be pipable if and only if it was already
pipable.
.TP
\fB--not-pipable\fR
Rebuild the WIM in the non-pipable format.  (This is the default if
\fIWIMFILE\fR is not pipable.)
.SH NOTES
\fB@IMAGEX_PROGNAME@ optimize\fR does not support split WIMs.
.PP
\fB@IMAGEX_PROGNAME@ optimize\fR is roughly equivalent to:
.RS
.PP
\fB@IMAGEX_PROGNAME@ export\fR \fIWIMFILE\fR all tmp.wim && mv tmp.wim \fIWIMFILE\fR
.RE
.PP
.SH SEE ALSO
.BR @IMAGEX_PROGNAME@ (1)
.BR @IMAGEX_PROGNAME@-export (1)
