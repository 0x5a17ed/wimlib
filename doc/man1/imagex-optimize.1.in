.TH WIMLIB-IMAGEX "1" "June 2014" "@IMAGEX_PROGNAME@ @VERSION@" "User Commands"
.SH NAME
@IMAGEX_PROGNAME@-optimize \- Optimize a WIM archive
.SH SYNOPSIS
\fB@IMAGEX_PROGNAME@ optimize\fR \fIWIMFILE\fR [\fIOPTION\fR...]
.SH DESCRIPTION
\fB@IMAGEX_PROGNAME@ optimize\fR will rebuild the stand-alone WIM \fIWIMFILE\fR.  The new
WIM is written to a temporary file, and it is renamed to the original file when
it's ready.  This action will remove any holes that have been left as a result
of appending images, so the new WIM may be slightly smaller than the old WIM.
In addition, some errors in the original WIM may be fixed by re-writing it
(although most cannot).
This command is also available as simply \fBwimoptimize\fR if the appropriate
hard link or batch file has been installed.
.SH OPTIONS
.TP 6
\fB--check\fR
When reading \fIWIMFILE\fR, verify its integrity if an integrity table is
present.  In addition, include an integrity table in the optimized WIM.  If this
option is not specified, by default the integrity table (if present) is not
checked, and an integrity table is included in the rebuilt WIM if and only if
one was present in the original WIM.
.TP
\fB--nocheck\fR
Neither verify the integrity of \fIWIMFILE\fR using the integrity table, nor
include an integrity table in the rebuilt WIM file.
.TP
\fB--recompress\fR
Recompress all compressed streams in \fIWIMFILE\fR when rebuilding it.  This
will increase the time needed to rebuild the WIM, unless the WIM is
uncompressed, but it may result in a better compression ratio if wimlib can do a
better job than the program that wrote the original file.  A side effect of this
is that every stream in the original WIM will be checksummed, so this can help
verify that the WIM is intact (equivalent to applying all the images from it).
.IP ""
Note: as of wimlib v1.5.3, wimlib's LZX compressor usually achieves the same or
better compression than Microsoft's, but is slightly slower.
.TP
\fB--recompress-slow\fR, \fB--compress-slow\fR
Spend even more time compressing the data in order to achieve a more optimal
compression ratio.  For LZX ("maximum") compression, compared to the default
\fB--recompress\fR this will make compression about twice as slow and may
improve the compression ratio by maybe 1%, depending on the data.  For LZMS
("recovery") compression this option also has an effect.  For XPRESS ("fast")
compression this option has no effect; however you may use \fB--compress\fR=LZX
\fB--recompress-slow\fR to change the compression type to LZX and recompress
slowly, as per this option.  In any case, this option implies
\fB--recompress\fR.
.TP
\fB--compress\fR=\fITYPE\fR
Recompress the WIM file using the specified compression type.  \fITYPE\fR may be
"none", "fast" (or "XPRESS"), or "maximum" (or "LZX").  This implies
\fB--recompress\fR.
.IP ""
\fITYPE\fR may also be "recovery" (or "LZMS"); however, this will result in
reduced compatibility.  See the documentation for this option to
\fB@IMAGEX_PROGNAME@ capture\fR (1) for more details.
.TP
\fB--chunk-size\fR=\fISIZE\fR
Set the WIM compression chunk size to \fISIZE\fR.  See the documentation for
this option to \fB@IMAGEX_PROGNAME@ capture\fR (1) for more details.
.TP
\fB--pack-streams\fR, \fB--solid\fR
Create a "solid" archive that compresses multiple files together.  This can
result in a higher compression ratio, but has disadvantages such as reduced
compatibility.  See the documentation for this option to \fB@IMAGEX_PROGNAME@
capture\fR (1) for more details.
.TP
\fB--pack-chunk-size\fR=\fISIZE\fR, \fB--solid-chunk-size\fR=\fISIZE\fR
Like \fB--chunk-size\fR, but set the chunk size used in packed resources.  See
the documentation for this option to \fB@IMAGEX_PROGNAME@ capture\fR (1) for
more details.
.TP
\fB--pack-compress\fR=\fITYPE\fR, \fB--solid-compress\fR=\fITYPE\fR
Like \fB--compress\fR, but set the compression format used in packed resources.
See the documentation for this option to \fB@IMAGEX_PROGNAME@ capture\fR (1) for
more details.
.TP
\fB--threads\fR=\fINUM_THREADS\fR
Number of threads to use for compressing data.  Default: autodetect (number of
processors).  This parameter is only meaningful when \fB--recompress\fR is also
specified.
.TP
\fB--pipable\fR
Rebuild the WIM so that it can be applied fully sequentially, including from a
pipe.  See \fB@IMAGEX_PROGNAME@ capture\fR(1) for more details about creating
pipable WIMs.  By default, when neither \fB--pipable\fR or \fB--not-pipable\fR
is specified, the rebuilt WIM will be pipable if and only if it was already
pipable.
.TP
\fB--not-pipable\fR
Rebuild the WIM in the non-pipable format.  (This is the default if
\fIWIMFILE\fR is not pipable.)
.SH NOTES
\fB@IMAGEX_PROGNAME@ optimize\fR does not support split WIMs.
.PP
\fB@IMAGEX_PROGNAME@ optimize\fR is roughly equivalent to:
.RS
.PP
\fB@IMAGEX_PROGNAME@ export\fR \fIWIMFILE\fR all tmp.wim && mv tmp.wim \fIWIMFILE\fR
.RE
.PP
.SH SEE ALSO
.BR @IMAGEX_PROGNAME@ (1)
.BR @IMAGEX_PROGNAME@-export (1)
