.TH IMAGEX 1 "March 2013" "imagex (wimlib @VERSION@)" "User Commands"
.SH NAME
imagex \- Create, modify, extract, mount, or unmount a WIM (Windows Imaging Format) archive
.SH SYNOPSIS
\fBimagex append\fR \fIarguments...\fR
.br
\fBimagex apply\fR \fIarguments...\fR
.br
\fBimagex capture\fR \fIarguments...\fR
.br
\fBimagex delete\fR \fIarguments...\fR
.br
\fBimagex dir\fR \fIarguments...\fR
.br
\fBimagex export\fR \fIarguments...\fR
.br
\fBimagex info\fR \fIarguments...\fR
.br
\fBimagex join\fR \fIarguments...\fR
.br
\fBimagex mount\fR \fIarguments...\fR
.br
\fBimagex mountrw\fR \fIarguments...\fR
.br
\fBimagex optimize\fR \fIarguments...\fR
.br
\fBimagex split\fR \fIarguments...\fR
.br
\fBimagex unmount\fR \fIarguments...\fR

.SH DESCRIPTION
\fBimagex\fR is able to deal with archives in the Windows Imaging Format (.wim
files). Its interface is meant to be similar to Microsoft's imagex.exe program.

To do its work, \fBimagex\fR uses \fBwimlib\fR, a library which provides
interfaces for manipulating WIM archives.  You could wimlib in your own programs
if you wanted to.  wimlib's public interface is documented.

.SH COMMANDS

There is a separate manual page for each \fBimagex\fR command.

.SH SUPPORTED FEATURES

The following general features are currently supported (note: this is not a
complete list):

.IP \[bu] 3
Create a stand-alone WIM from a directory or NTFS volume (\fBimagex capture\fR)
.IP \[bu]
Append a directory or NTFS volume onto a stand-alone WIM as a new image (\fBimagex
append\fR)
.IP \[bu]
Apply an image from a stand-alone or split WIM to a directory or NTFS volume
(\fBimagex apply\fR)
.IP \[bu]
Mount an image from a stand-alone or split WIM read-only (\fBimagex mount\fR)
.IP \[bu]
Mount an image from a stand-alone WIM read-write (\fBimagex mountrw\fR)
.IP \[bu]
Delete image(s) from a stand-alone WIM (\fBimagex delete\fR)
.IP \[bu]
Export image(s) from a stand-alone or split WIM (\fBimagex export\fR)
.IP \[bu]
Display information about a WIM file (\fBimagex info\fR, \fBimagex dir\fR)
.IP \[bu]
Change the name or description of an image in the WIM (\fBimagex info\fR)
.IP \[bu]
Change which image in a WIM is bootable (\fBimagex info\fR)
.IP \[bu]
Combine split WIMs into one stand-alone WIM (\fBimage join\fR)
.IP \[bu]
Split a stand-alone WIM into multiple parts (\fBimage split\fR)
.IP \[bu]
Support for all WIM compression types, both compression and decompression (LZX,
XPRESS, and none)
.IP \[bu]
WIM integrity table is supported (\fB--check\fR option to many commands)
.IP \[bu]
WIM XML data (parsed and written using \fBlibxml\fR(3))

.SH DIFFERENCES FROM MICROSOFT IMAGEX

While similar to Microsoft's "imagex.exe" program, this program is designed for
UNIX-based systems and by the nature of the platform cannot be exactly the same
as Microsoft's version.  In addition, I have added additional useful features
when appropriate.

.IP \[bu] 4
Because Microsoft designed the WIM file format to accomodate Windows-specific
and NTFS-specific features, wimlib must have two separate image capture and
application modes (although the \fBimagex\fR subcommands for the modes are the
same): one for general image capture and application, and one for the capture or
application of an image specifically from/to an NTFS volume.

.IP \[bu]
Microsoft's version has some weird limitations, like it won't let you extract a
WIM on a shared folder, and it requires some commands to be run only from
Windows PE and not from regular Windows.  This version does not have these
unusual limitations, although it won't actually run on Windows anyway.

.IP \[bu]
There are bugs in Microsoft's WIM library and I obviously have not included the
same bugs in wimlib, although in some cases I have had to work around bugs for
compatibility purposes.

.IP \[bu]
wimlib's \fBimagex\fR offers the extra command \fBimagex optimize\fR,
which lets you easily remove wasted space in a WIM (which can arise after
a WIM image is appended or mounted read-write).

.IP \[bu]
wimlib's \fBimagex\fR also offers the command \fBimagex join\fR, which lets you
easily join the parts of a split WIM.

.IP \[bu]
wimlib's \fBimagex apply\fR supports keeping files hard-linked or symlinked
across WIM images when extracted from a WIM.  So you can, for example, extract
different versions of Windows from an install.wim without using much extra space.

.IP \[bu]
wimlib's \fBimagex capture\fR supports combining multiple separate directories
and files together in a configurable way to create a WIM image.

.IP \[bu]
wimlib's XPRESS compressor is better than Microsoft's.

.IP \[bu]
wimlib supports multithreaded compression, which can make it much faster to
create compressed WIM files.

.IP \[bu]
wimlib's \fBimagex capture\fR supports a special mode where UNIX file modes,
owners, and groups are stored.

.IP \[bu]
wimlib's \fBimagex mount\fR and \fBimagex mountrw\fR are much faster than
Microsoft's versions for some reason.  I don't know what they have their program
do that takes so long to simply set up a mountpoint.

.IP \[bu]
wimlib's \fBimagex mount\fR supports mounting an image from a split WIM, but
Microsoft's software does not.

.SH WARNING

Note: \fBwimlib\fR and \fBimagex\fR are experimental.  Use Microsoft's
imagex.exe if you have to make sure your WIM files are made "correctly".  Feel
free to submit a bug report if you find a bug.

Some parts of the WIM file format are poorly documented or even completely
undocumented, so I've just had to do the best I can to read and write WIMs in a
way that appears to be compatible with Microsoft's software.

.SH REPORTING BUGS

Report bugs to ebiggers3@gmail.com.

.SH SEE ALSO
.BR imagex-append (1),
.BR imagex-apply (1),
.BR imagex-capture (1),
.BR imagex-delete (1),
.BR imagex-dir (1),
.BR imagex-export (1),
.BR imagex-info (1),
.BR imagex-join (1),
.BR imagex-mount (1),
.BR imagex-mountrw (1),
.BR imagex-optimize (1),
.BR imagex-split (1),
.BR imagex-unmount (1),
